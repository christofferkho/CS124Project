package app.receiver.observable;

import java.util.ArrayList;
import java.util.HashMap;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import app.entity.AccessLog;
import app.receiver.NetUtil;
import app.receiver.observer.Observer;

public class AccessLogListener implements Subject {
	private ArrayList<Observer> observers = new ArrayList<Observer>();
	private HashMap<String, Object> map = new HashMap<String, Object>();
	private ObjectMapper mapper = new ObjectMapper();
	private String json1;
	
	public AccessLogListener(){
		try {
			this.json1 = mapper.writeValueAsString(map);
		} catch (JsonProcessingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void run(){
		Thread t = new Thread(new Runnable(){
				
			String oldReply = "";
			String url1 = "http://localhost:8080/"+"/viewAccessLogs";
			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					String reply = NetUtil.postJsonDataToUrl(url1, json1);
					if(oldReply != reply){
						try
						{
							// CONVERT REPLY JSON STRING TO A JAVA OBJECT 
							HashMap replyMap = (HashMap) mapper.readValue(reply, HashMap.class);
							return replyMap;	
						}
						catch(Exception e)
						{
							//System.out.println(reply);
							HashMap replyMap = new HashMap();
							replyMap.put("message", reply);
							return replyMap;	
							
						}
					}
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			
		});
	}

	@Override
	public void registerObserver(Observer observer) {
		// TODO Auto-generated method stub
		observers.add(observer);
	}

	@Override
	public void notifyObservers(HashMap result) {
		// TODO Auto-generated method stub
		for(Observer o: observers){
			o.update(result);
		}
	}

	@Override
	public void removeObserver(Observer observer) {
		// TODO Auto-generated method stub
		observers.remove(observer);
	}

}
